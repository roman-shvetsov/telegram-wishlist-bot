from telegram import (
    Update,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton,
    KeyboardButtonRequestUser
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters
)
from telegram.constants import ParseMode
from db import (
    init_db,
    register_user,
    get_user_wishlist,
    add_link_to_wishlist,
    create_friend_request,
    update_friend_request,
    get_pool,
    check_friendship,
    get_pending_requests,
    delete_gift_by_id,
    get_friends,
    remove_friend,
    get_user_by_id,
    add_feedback,
    # –ù–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:
    reserve_gift,
    cancel_reservation,
    get_reservation_info,
    get_user_reservations,
    check_old_reservations
)
from config import TELEGRAM_TOKEN, ADMIN_ID
import asyncio


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await register_user(user)

    await update.message.reply_text(
        """–ù–∞–¥–æ–µ–ª–æ –ª–æ–º–∞—Ç—å –≥–æ–ª–æ–≤—É –Ω–∞–¥ –ø–æ–¥–∞—Ä–∫–∞–º–∏? üéÅ

–ù–∞—à –±–æ—Ç - —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –ø–æ–¥–∞—Ä–∫–æ–≤:
‚ú® –°–æ–∑–¥–∞–≤–∞–π –≤–∏—à–ª–∏—Å—Ç —Å–≤–æ–µ–π –º–µ—á—Ç—ã
‚ú® –£–∑–Ω–∞–≤–∞–π –∂–µ–ª–∞–Ω–∏—è –¥—Ä—É–∑–µ–π
‚ú® –î–∞—Ä–∏ —Ç–æ, —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ

–≠—Ç–æ –ø—Ä–æ—â–µ –ø—Ä–æ—Å—Ç–æ–≥–æ:
1. –û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É —Å—Å—ã–ª–∫—É –Ω–∞ –∂–µ–ª–∞–µ–º—ã–π —Ç–æ–≤–∞—Ä
2. –ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º üë•
3. –û–±–º–µ–Ω–∏–≤–∞–π—Ç–µ—Å—å —Å–ø–∏—Å–∫–∞–º–∏ –∏ —Ä–∞–¥—É–π—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –∏–¥–µ–∞–ª—å–Ω—ã–º–∏ –ø–æ–¥–∞—Ä–∫–∞–º–∏!Ô∏è""",
        reply_markup=main_keyboard(),
        parse_mode=ParseMode.MARKDOWN
    )

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ —É—Å–ª–æ–≤–∏—è
    await update.message.reply_text(
        "üîç –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: /terms",
        disable_web_page_preview=True
    )


async def terms(update: Update, context: ContextTypes.DEFAULT_TYPE):
    terms_text = """
üìú *–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞*

1. *–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç*:
   - –í—ã –¥–æ–±–∞–≤–ª—è–µ—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∂–µ–ª–∞–µ–º—ã–µ –ø–æ–¥–∞—Ä–∫–∏
   - –í–∞—à–∏ –¥—Ä—É–∑—å—è –≤–∏–¥—è—Ç –≤–∞—à —Å–ø–∏—Å–æ–∫ –∏ –≤—ã–±–∏—Ä–∞—é—Ç –ø–æ–¥–∞—Ä–∫–∏
   - –í—ã –≤–∏–¥–∏—Ç–µ —Å–ø–∏—Å–∫–∏ —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π

2. *–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å*:
   - –í–∞—à–∏ —Å–ø–∏—Å–∫–∏ –≤–∏–¥–Ω—ã —Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º –¥—Ä—É–∑—å—è–º
   - –ú—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º
   - –í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç

3. *–ü—Ä–∞–≤–∏–ª–∞*:
   - –ó–∞–ø—Ä–µ—â–µ–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã–µ –∏–ª–∏ –æ–ø–∞—Å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
   - –ù–µ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è–π—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –¥—Ä—É–∑–µ–π
   - –ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! ‚ù§Ô∏è
"""
    await update.message.reply_text(
        terms_text,
        parse_mode=ParseMode.MARKDOWN,
        disable_web_page_preview=True
    )

def main_keyboard():
    return ReplyKeyboardMarkup([
        ["üéÅ –ú–æ–π –≤–∏—à-–ª–∏—Å—Ç"],
        ["üë´ –î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞", "üìã –î—Ä—É–∑—å—è"],
        ["üóë –£–¥–∞–ª–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫", "üìù –û—Ç–∑—ã–≤"]
    ], resize_keyboard=True)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def handle_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message.text

    if message == 'üéÅ –ú–æ–π –≤–∏—à-–ª–∏—Å—Ç':
        await show_user_wishlist(update, context)
    elif message == 'üóë –£–¥–∞–ª–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫':
        await show_gifts_to_delete(update, context)
    elif message == 'üë´ –î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞':
        await add_friend_handler(update, context)
    elif message == 'üìã –î—Ä—É–∑—å—è':
        await show_friends_list(update, context)
    elif message == 'üìù –û—Ç–∑—ã–≤':
        await request_feedback(update, context)


async def check_gift_limit(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏ –ª–∏–º–∏—Ç –ø–æ–¥–∞—Ä–∫–æ–≤ (10 —à—Ç—É–∫)"""
    pool = get_pool()
    async with pool.acquire() as conn:
        count = await conn.fetchval('SELECT COUNT(*) FROM wishlist WHERE user_id = $1', user_id)
        return count >= 15


async def show_user_wishlist(update: Update, context: ContextTypes.DEFAULT_TYPE, is_own_list=True):
    user_id = update.effective_user.id
    wishlist = await get_user_wishlist(user_id)

    if not wishlist:
        await update.message.reply_text("–¢–≤–æ–π —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ–∫–∞ –ø—É—Å—Ç üòä –î–∞–≤–∞–π –¥–æ–±–∞–≤–∏–º —á—Ç–æ-–Ω–∏–±—É–¥—å!")
        return

    for gift in wishlist:
        gift_link = gift['link']
        title = gift.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
        price = gift.get('price', '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')

        message_text = f"üéÅ *{title}*\n"
        if price != '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞':
            message_text += f"üí∞ *–¶–µ–Ω–∞:* {price}\n"
        message_text += f"üîó [–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä]({gift_link})"

        if is_own_list:
            reservation = await get_reservation_info(gift['id'])
            if reservation:
                message_text += "\n\nüõë *–ó–ê–ë–†–û–ù–ò–†–û–í–ê–ù–û*"

            await update.message.reply_text(
                message_text,
                parse_mode=ParseMode.MARKDOWN,
                disable_web_page_preview=False
            )
        else:
            reservation = await get_reservation_info(gift['id'])
            if reservation:
                if reservation['reserved_by'] == user_id:
                    message_text += "\n\n‚úÖ *–í—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫*"
                    keyboard = InlineKeyboardMarkup([
                        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å", callback_data=f"cancel_reserve:{gift['id']}")]
                    ])
                else:
                    message_text += "\n\nüõë *–£–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ*"
                    keyboard = None
            else:
                keyboard = InlineKeyboardMarkup([
                    [InlineKeyboardButton("üîí –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"reserve:{gift['id']}")]
                ])

            await update.message.reply_text(
                message_text,
                reply_markup=keyboard,
                parse_mode=ParseMode.MARKDOWN,
                disable_web_page_preview=False
            )


async def update_prices(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ü–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = update.effective_user.id
    wishlist = await get_user_wishlist(user_id)

    if not wishlist:
        await update.message.reply_text("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ —Å–ø–∏—Å–∫–µ.")
        return

    msg = await update.message.reply_text("‚è≥ –ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω...")

    updated_count = 0
    from parsers import parse_product_info

    for gift in wishlist:
        try:
            product_info = await parse_product_info(gift['link'])
            if product_info:
                title, price, domain = product_info

                pool = get_pool()
                async with pool.acquire() as conn:
                    await conn.execute('''
                        UPDATE wishlist 
                        SET title = $1, price = $2, domain = $3, parsed_at = NOW()
                        WHERE id = $4
                    ''', title, price, domain, gift['id'])

                updated_count += 1
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ {gift['id']}: {e}")

    await msg.edit_text(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –∏–∑ {len(wishlist)} –ø–æ–¥–∞—Ä–∫–æ–≤!")


async def show_gifts_to_delete(update: Update, context: ContextTypes.DEFAULT_TYPE):
    wishlist = await get_user_wishlist(update.effective_user.id)
    if not wishlist:
        await update.message.reply_text("–ü–æ–∫–∞ –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å - —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç üòâ")
        return

    for gift in wishlist:
        link = gift["link"]
        gift_id = gift["id"]
        short_text = (link[:50] + '...') if len(link) > 50 else link

        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete:{gift_id}")]
        ])

        await update.message.reply_text(
            f"[{short_text}]({link})",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )


async def add_friend_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = ReplyKeyboardMarkup([
        [KeyboardButton("üë§ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–∞", request_user=KeyboardButtonRequestUser(
            request_id=1,
            user_is_bot=False,
            user_is_premium=None
        ))],
        ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    ], resize_keyboard=True)

    await update.message.reply_text(
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:",
        reply_markup=keyboard
    )


async def handle_user_shared(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_shared = update.message.user_shared
    selected_user_id = user_shared.user_id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–º–æ–≥–æ —Å–µ–±—è
    if update.effective_user.id == selected_user_id:
        await update.message.reply_text(
            "–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è –≤ –¥—Ä—É–∑—å—è üòä",
            reply_markup=main_keyboard()
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
    pool = get_pool()
    async with pool.acquire() as conn:
        friend = await conn.fetchrow('SELECT * FROM users WHERE id = $1', selected_user_id)

    if not friend:
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
        invite_keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(
                "üì© –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞",
                url=f"https://t.me/share/url?url=https://t.me/{(await context.bot.get_me()).username}&text=–ü—Ä–∏–≤–µ—Ç!%20–î–∞–≤–∞–π%20–æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è%20—Å–ø–∏—Å–∫–∞–º–∏%20–∂–µ–ª–∞–Ω–∏–π%20—á–µ—Ä–µ–∑%20—ç—Ç–æ–≥–æ%20–±–æ—Ç–∞!"
            )]
        ])

        await update.message.reply_text(
            "–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â—ë –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ üò¢\n–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –µ–≥–æ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:",
            reply_markup=invite_keyboard
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥—Ä—É–∑—å—è –ª–∏ —É–∂–µ
    if await check_friendship(update.effective_user.id, selected_user_id):
        await update.message.reply_text(
            "–í—ã —É–∂–µ –¥—Ä—É–∑—å—è —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!",
            reply_markup=main_keyboard()
        )
        return

    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è
    if not await create_friend_request(update.effective_user.id, selected_user_id):
        await update.message.reply_text(
            "–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é üòä",
            reply_markup=main_keyboard()
        )
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –¥—Ä—É–≥—É
    request_keyboard = InlineKeyboardMarkup([
        [
            InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"friend_request:accept:{update.effective_user.id}"),
            InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"friend_request:reject:{update.effective_user.id}")
        ]
    ])

    try:
        await context.bot.send_message(
            chat_id=selected_user_id,
            text=f"üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.first_name} —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Å –≤ –¥—Ä—É–∑—å—è!",
            reply_markup=request_keyboard
        )

        await update.message.reply_text(
            "–ó–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!",
            reply_markup=main_keyboard()
        )
    except Exception:
        await update.message.reply_text(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å. –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.",
            reply_markup=main_keyboard()
        )


async def show_friends_list(update: Update, context: ContextTypes.DEFAULT_TYPE):
    friends = await get_friends(update.effective_user.id)
    if not friends:
        await update.message.reply_text(
            "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–∑–µ–π üòâ –î–æ–±–∞–≤—å –∫–æ–≥–æ-–Ω–∏–±—É–¥—å, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –∏—Ö —Å–ø–∏—Å–∫–∏!",
            reply_markup=main_keyboard()
        )
        return

    for friend in friends:
        keyboard = InlineKeyboardMarkup([
            [
                InlineKeyboardButton("üéÅ –ü–æ–∫–∞–∑–∞—Ç—å –≤–∏—à–ª–∏—Å—Ç", callback_data=f"show_wishlist:{friend['id']}"),
                InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å", callback_data=f"remove_friend:{friend['id']}")
            ]
        ])

        await update.message.reply_text(
            f"üë§ {friend['first_name']} (@{friend['username']})",
            reply_markup=keyboard
        )

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã
    pending_requests = await get_pending_requests(update.effective_user.id)
    if pending_requests:
        await update.message.reply_text("üì• –í—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –¥—Ä—É–∑—å—è:")
        for request in pending_requests:
            keyboard = InlineKeyboardMarkup([
                [
                    InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"friend_request:accept:{request['from_user_id']}"),
                    InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
                                         callback_data=f"friend_request:reject:{request['from_user_id']}")
                ]
            ])

            await update.message.reply_text(
                f"üë§ {request['first_name']} (@{request['username']}) —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Å –≤ –¥—Ä—É–∑—å—è",
                reply_markup=keyboard
            )


async def handle_friend_request_response(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    action, from_user_id = query.data.split(":")[1:]  # –ó–¥–µ—Å—å action –±—É–¥–µ—Ç 'accept' –∏–ª–∏ 'reject'
    from_user_id = int(from_user_id)
    to_user_id = query.from_user.id

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞
    success = await update_friend_request(from_user_id, to_user_id, action)  # –ü–µ—Ä–µ–¥–∞–µ–º action –∫–∞–∫ —Å—Ç–∞—Ç—É—Å
    if not success:
        await query.edit_message_text("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è.")
        return

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    from_user = await get_user_by_id(from_user_id)
    to_user = await get_user_by_id(to_user_id)

    if action == 'accept':
        await query.edit_message_text(
            f"‚úÖ –í—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è –æ—Ç {from_user['first_name']} (@{from_user['username']})!"
        )

        try:
            await context.bot.send_message(
                chat_id=from_user_id,
                text=f"üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {to_user['first_name']} (@{to_user['username']}) –ø—Ä–∏–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è!"
            )
        except Exception:
            pass
    else:
        await query.edit_message_text(
            f"‚ùå –í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è –æ—Ç {from_user['first_name']} (@{from_user['username']})"
        )


# –î–æ–±–∞–≤–∏–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ä—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
async def check_reservations_periodically(context: ContextTypes.DEFAULT_TYPE):
    try:
        count = await check_old_reservations()
        if count > 0:
            print(f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ {count} —Å—Ç–∞—Ä—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: {e}")


async def handle_friend_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    try:
        # –ü–æ–∫–∞–∑–∞—Ç—å –≤–∏—à–ª–∏—Å—Ç –¥—Ä—É–≥–∞
        if query.data.startswith("show_wishlist:"):
            friend_id = int(query.data.split(":")[1])
            friend = await get_user_by_id(friend_id)
            wishlist = await get_user_wishlist(friend_id)

            if not wishlist:
                await query.edit_message_text(f"üéÅ –£ {friend['first_name']} –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ —Å–ø–∏—Å–∫–µ üò¢")
                return

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            await context.bot.send_message(
                chat_id=query.message.chat_id,
                text=f"üéÅ –°–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤ {friend['first_name']}:"
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–∞—Ä–∫–∏
            current_user_id = query.from_user.id
            for gift in wishlist:
                gift_link = gift['link']
                title = gift.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                price = gift.get('price', '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')

                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤ –≤–∞—à–µ–º –≤–∏—à–ª–∏—Å—Ç–µ
                message_text = f"üéÅ *{title}*\n"
                if price != '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞':
                    message_text += f"üí∞ *–¶–µ–Ω–∞:* {price}\n"
                message_text += f"üîó [–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä]({gift_link})"

                reservation = await get_reservation_info(gift['id'])
                if reservation:
                    if reservation['reserved_by'] == current_user_id:
                        message_text += "\n\n‚úÖ *–í—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫*"
                        keyboard = InlineKeyboardMarkup([
                            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å", callback_data=f"cancel_reserve:{gift['id']}")]
                        ])
                    else:
                        message_text += "\n\nüõë *–£–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ*"
                        keyboard = None
                else:
                    keyboard = InlineKeyboardMarkup([
                        [InlineKeyboardButton("üîí –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"reserve:{gift['id']}")]
                    ])

                await context.bot.send_message(
                    chat_id=query.message.chat_id,
                    text=message_text,
                    reply_markup=keyboard,
                    parse_mode=ParseMode.MARKDOWN,
                    disable_web_page_preview=False
                )

        # –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞
        elif query.data.startswith("reserve:"):
            gift_id = int(query.data.split(":")[1])
            user_id = query.from_user.id

            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–µ
            pool = get_pool()
            async with pool.acquire() as conn:
                gift_info = await conn.fetchrow(
                    'SELECT w.link, w.title, w.price, w.user_id as owner_id, u.first_name '
                    'FROM wishlist w '
                    'JOIN users u ON w.user_id = u.id '
                    'WHERE w.id = $1',
                    gift_id
                )

            gift_link = gift_info['link']
            title = gift_info.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            price = gift_info.get('price', '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫
            if gift_info['owner_id'] == user_id:
                await query.edit_message_text("–ù–µ–ª—å–∑—è –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ üòä")
                return

            # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
            if await reserve_gift(gift_id, user_id):
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞
                try:
                    message_text = f"üéâ <b>–ö—Ç–æ-—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–¥–∞—Ä–∏—Ç—å –≤–∞–º —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫!</b>\n\n"
                    message_text += f"üéÅ <b>{title}</b>\n"
                    if price != '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞':
                        message_text += f"üí∞ <b>–¶–µ–Ω–∞:</b> {price}\n"
                    message_text += f"üîó <a href=\"{gift_link}\">–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä</a>\n\n"
                    message_text += "–¢–µ–ø–µ—Ä—å –¥—Ä—É–≥–∏–µ –Ω–µ —Å–º–æ–≥—É—Ç –µ–≥–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å!"

                    await context.bot.send_message(
                        chat_id=gift_info['owner_id'],
                        text=message_text,
                        parse_mode=ParseMode.HTML,
                        disable_web_page_preview=False
                    )
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞: {e}")

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                message_text = f"‚úÖ <b>–í—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫!</b>\n\n"
                message_text += f"üéÅ <b>{title}</b>\n"
                if price != '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞':
                    message_text += f"üí∞ <b>–¶–µ–Ω–∞:</b> {price}\n"
                message_text += f"üîó <a href=\"{gift_link}\">–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä</a>\n\n"
                message_text += "–¢–µ–ø–µ—Ä—å –¥—Ä—É–≥–∏–µ –Ω–µ —Å–º–æ–≥—É—Ç –µ–≥–æ –≤—ã–±—Ä–∞—Ç—å. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –µ–≥–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –¥–Ω–µ–π!"

                await query.edit_message_text(
                    text=message_text,
                    parse_mode=ParseMode.HTML,
                    disable_web_page_preview=False,
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å", callback_data=f"cancel_reserve:{gift_id}")]
                    ])
                )
            else:
                await query.edit_message_text(
                    "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω.",
                    parse_mode=ParseMode.HTML
                )

        # –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        elif query.data.startswith("cancel_reserve:"):
            gift_id = int(query.data.split(":")[1])
            user_id = query.from_user.id

            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–µ
            pool = get_pool()
            async with pool.acquire() as conn:
                gift_info = await conn.fetchrow(
                    'SELECT w.link, w.title, w.price, w.user_id as owner_id, u.first_name '
                    'FROM wishlist w '
                    'JOIN users u ON w.user_id = u.id '
                    'WHERE w.id = $1',
                    gift_id
                )

            gift_link = gift_info['link']
            title = gift_info.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            price = gift_info.get('price', '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')

            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å
            if await cancel_reservation(gift_id, user_id):
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞
                try:
                    message_text = f"üò¢ <b>–ö—Ç–æ-—Ç–æ –ø–µ—Ä–µ–¥—É–º–∞–ª –¥–∞—Ä–∏—Ç—å –≤–∞–º —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫</b>\n\n"
                    message_text += f"üéÅ <b>{title}</b>\n"
                    if price != '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞':
                        message_text += f"üí∞ <b>–¶–µ–Ω–∞:</b> {price}\n"
                    message_text += f"üîó <a href=\"{gift_link}\">–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä</a>\n\n"
                    message_text += "–¢–µ–ø–µ—Ä—å –µ–≥–æ —Å–Ω–æ–≤–∞ –º–æ–∂–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å!"

                    await context.bot.send_message(
                        chat_id=gift_info['owner_id'],
                        text=message_text,
                        parse_mode=ParseMode.HTML,
                        disable_web_page_preview=False
                    )
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞: {e}")

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                message_text = f"‚ùå <b>–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞</b>\n\n"
                message_text += f"üéÅ <b>{title}</b>\n"
                if price != '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞':
                    message_text += f"üí∞ <b>–¶–µ–Ω–∞:</b> {price}\n"
                message_text += f"üîó <a href=\"{gift_link}\">–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä</a>"

                await query.edit_message_text(
                    text=message_text,
                    parse_mode=ParseMode.HTML,
                    disable_web_page_preview=False,
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("üîí –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data=f"reserve:{gift_id}")]
                    ])
                )
            else:
                await query.edit_message_text(
                    "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω—å. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ —É–∂–µ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.",
                    parse_mode=ParseMode.HTML
                )

        # –£–¥–∞–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∞
        elif query.data.startswith("remove_friend:"):
            friend_id = int(query.data.split(":")[1])
            await remove_friend(query.from_user.id, friend_id)

            # –¢–∞–∫–∂–µ –æ—Ç–º–µ–Ω—è–µ–º –≤—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–∂–¥—É —ç—Ç–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
            pool = get_pool()
            async with pool.acquire() as conn:
                # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–æ–¥–∞—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥—Ä—É–≥–æ–º
                gifts = await conn.fetch(
                    'SELECT w.id FROM wishlist w '
                    'JOIN reservations r ON w.id = r.gift_id '
                    'WHERE w.user_id = $1 AND r.reserved_by = $2',
                    query.from_user.id, friend_id
                )

                # –ò –Ω–∞–æ–±–æ—Ä–æ—Ç - –ø–æ–¥–∞—Ä–∫–∏ –¥—Ä—É–≥–∞, –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                friend_gifts = await conn.fetch(
                    'SELECT w.id FROM wishlist w '
                    'JOIN reservations r ON w.id = r.gift_id '
                    'WHERE w.user_id = $1 AND r.reserved_by = $2',
                    friend_id, query.from_user.id
                )

                # –û—Ç–º–µ–Ω—è–µ–º –≤—Å–µ —ç—Ç–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
                for gift in gifts + friend_gifts:
                    await cancel_reservation(gift['id'], friend_id if gift in gifts else query.from_user.id)

            await query.edit_message_text("–î—Ä—É–≥ —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ üíî")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_friend_callback: {e}")
        await query.edit_message_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üò¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


async def handle_delete_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data.startswith("delete:"):
        gift_id = int(query.data.split("delete:")[1])
        await delete_gift_by_id(gift_id)
        await query.edit_message_text("–ü–æ–¥–∞—Ä–æ–∫ —É–¥–∞–ª—ë–Ω ‚úÖ")


async def request_feedback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞. "
        "–ú—ã —Ü–µ–Ω–∏–º –∫–∞–∂–¥–æ–µ –º–Ω–µ–Ω–∏–µ! üòä\n\n"
        "–ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ñ–æ—Ç–æ.",
        reply_markup=ReplyKeyboardMarkup([["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]], resize_keyboard=True)
    )
    context.user_data['awaiting_feedback'] = True


async def handle_media(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.user_data.get('awaiting_feedback'):
        return

    user = update.effective_user
    caption = update.message.caption or "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"

    await add_feedback(user.id, user.username, caption)
    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤ —Å –º–µ–¥–∏–∞! üíñ –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ–≥–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º.",
        reply_markup=main_keyboard()
    )

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –∞–¥–º–∏–Ω—É
    try:
        if update.message.photo:
            photo = update.message.photo[-1].file_id
            await context.bot.send_photo(
                chat_id=ADMIN_ID,
                photo=photo,
                caption=f"üì∑ –û—Ç–∑—ã–≤ –æ—Ç @{user.username} (id: {user.id}):\n\n{caption}"
            )
        elif update.message.document:
            await context.bot.send_document(
                chat_id=ADMIN_ID,
                document=update.message.document.file_id,
                caption=f"üìÑ –û—Ç–∑—ã–≤ –æ—Ç @{user.username} (id: {user.id}):\n\n{caption}"
            )
        else:
            # –ù–∞ —Å–ª—É—á–∞–π –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –º–µ–¥–∏–∞
            await context.bot.send_message(
                chat_id=ADMIN_ID,
                text=f"üì¶ –û—Ç–∑—ã–≤ –æ—Ç @{user.username} (id: {user.id}):\n\n{caption}"
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞-–æ—Ç–∑—ã–≤–∞ –∞–¥–º–∏–Ω—É: {e}")

    del context.user_data['awaiting_feedback']


async def handle_text_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message.text

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if message == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        if 'awaiting_feedback' in context.user_data:
            del context.user_data['awaiting_feedback']

        await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_keyboard())
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∑—ã–≤–∞
    if context.user_data.get('awaiting_feedback'):
        user = update.effective_user
        await add_feedback(user.id, user.username, message)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! üíñ –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ–≥–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º.",
            reply_markup=main_keyboard()
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤ –∞–¥–º–∏–Ω—É
        feedback_text = (
            f"üìù –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç @{user.username} (id: {user.id}):\n\n"
            f"{message}"
        )

        try:
            await context.bot.send_message(
                chat_id=ADMIN_ID,
                text=feedback_text
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞ –∞–¥–º–∏–Ω—É: {e}")

        del context.user_data['awaiting_feedback']
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫
    if message.startswith("http"):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –ø–æ–¥–∞—Ä–∫–æ–≤
        if await check_gift_limit(update.effective_user.id):
            await update.message.reply_text(
                "üö´ –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞ –≤ 15 –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ!",
                #"–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ–ª—å—à–µ –ø–æ–¥–∞—Ä–∫–æ–≤:\n"
                #"1. –ù–∞–∂–º–∏—Ç–µ ¬´üë´ –î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞¬ª\n"
                #"2. –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞\n\n"
                #"–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ +1 –∫ –ª–∏–º–∏—Ç—É –ø–æ–¥–∞—Ä–∫–æ–≤!",
                reply_markup=main_keyboard()
            )
            return
        await add_link_to_wishlist(update.effective_user.id, message)
        await update.message.reply_text("–ü–æ–¥–∞—Ä–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–≤–æ–π —Å–ø–∏—Å–æ–∫! üëç")
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
    await handle_buttons(update, context)


async def post_init(application):
    await init_db()


def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Application —Å JobQueue
    app = ApplicationBuilder() \
        .token(TELEGRAM_TOKEN) \
        .post_init(post_init) \
        .concurrent_updates(True) \
        .build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("terms", terms))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_messages))
    app.add_handler(MessageHandler(filters.PHOTO | filters.Document.ALL, handle_media))
    app.add_handler(CallbackQueryHandler(handle_delete_callback, pattern="^delete:"))
    app.add_handler(CallbackQueryHandler(handle_friend_callback, pattern="^(show_wishlist|remove_friend|reserve|cancel_reserve):"))
    app.add_handler(CallbackQueryHandler(handle_friend_request_response, pattern="^friend_request:"))
    app.add_handler(MessageHandler(filters.StatusUpdate.USER_SHARED, handle_user_shared))
    app.add_handler(CommandHandler("update_prices", update_prices))

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
    app.job_queue.run_repeating(
        callback=check_reservations_periodically,
        interval=86400,  # 24 —á–∞—Å–∞
        first=10  # –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
    )

    app.run_polling()


if __name__ == "__main__":
    main()